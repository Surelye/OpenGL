#version 330 core													
in vec3 ourColor;
in vec2 TexCoord;

out vec4 color;

uniform sampler2D ourTexture;

// Фрагментный шейдер должен иметь доступ к текстурному объекту, но как передать 
// его во фрагментный шейдер? GLSL имеет встроенный тип данных для текстурных
// объектов, называемый sampler, у которого в качестве окончания идёт тип текстуры,
// то есть sampler2D. Мы можем передать текстуру фрагментному шейдеру объявив в нём
// uniform sampler2D. 
// Для сэмплирования цвета текстуры используем встроенную в GLSL функцию texture, которая в качестве
// первого аргумента принимает текстурный sampler, а в качестве второго текстурные координаты.
// Функция texture затем сэмплирует значение цвета, используя текстурные параметры, которые мы 
// задали ранее. Результатом работы этого фрагментного шейдера будет (фильтрованный) цвет текстуры
// на (интерполированной) текстурной координате.

void main()														
{																	
	color = texture(ourTexture, TexCoord);
}																	